// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type Todos struct {
	TodoList             []*Todo  `protobuf:"bytes,1,rep,name=todoList,proto3" json:"todoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todos) Reset()         { *m = Todos{} }
func (m *Todos) String() string { return proto.CompactTextString(m) }
func (*Todos) ProtoMessage()    {}
func (*Todos) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{0}
}

func (m *Todos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todos.Unmarshal(m, b)
}
func (m *Todos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todos.Marshal(b, m, deterministic)
}
func (m *Todos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todos.Merge(m, src)
}
func (m *Todos) XXX_Size() int {
	return xxx_messageInfo_Todos.Size(m)
}
func (m *Todos) XXX_DiscardUnknown() {
	xxx_messageInfo_Todos.DiscardUnknown(m)
}

var xxx_messageInfo_Todos proto.InternalMessageInfo

func (m *Todos) GetTodoList() []*Todo {
	if m != nil {
		return m.TodoList
	}
	return nil
}

// The response message containing the greetings
type Todo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Done                 bool     `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Todo) Reset()         { *m = Todo{} }
func (m *Todo) String() string { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()    {}
func (*Todo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{1}
}

func (m *Todo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Todo.Unmarshal(m, b)
}
func (m *Todo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Todo.Marshal(b, m, deterministic)
}
func (m *Todo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Todo.Merge(m, src)
}
func (m *Todo) XXX_Size() int {
	return xxx_messageInfo_Todo.Size(m)
}
func (m *Todo) XXX_DiscardUnknown() {
	xxx_messageInfo_Todo.DiscardUnknown(m)
}

var xxx_messageInfo_Todo proto.InternalMessageInfo

func (m *Todo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Todo) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Todo) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_0e4b95d0c4e09639, []int{2}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Todos)(nil), "Todos")
	proto.RegisterType((*Todo)(nil), "Todo")
	proto.RegisterType((*Empty)(nil), "Empty")
}

func init() { proto.RegisterFile("todo.proto", fileDescriptor_0e4b95d0c4e09639) }

var fileDescriptor_0e4b95d0c4e09639 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0xbf, 0xeb, 0xc2, 0x30,
	0x10, 0xc5, 0x9b, 0xf4, 0xc7, 0xb7, 0xdf, 0x2b, 0x38, 0x64, 0x0a, 0xa5, 0x43, 0xcd, 0x54, 0x1c,
	0x3a, 0xd4, 0xdd, 0x41, 0x10, 0x11, 0x9c, 0xaa, 0x2e, 0x6e, 0xd6, 0x64, 0xc8, 0xa0, 0x09, 0xed,
	0x21, 0xfa, 0xdf, 0x4b, 0xae, 0xe0, 0x74, 0x8f, 0xcf, 0x1d, 0xf7, 0xde, 0x03, 0x40, 0xa7, 0x5d,
	0xeb, 0x47, 0x87, 0x4e, 0xad, 0x20, 0x3d, 0x3b, 0xed, 0x26, 0xb1, 0x84, 0x3c, 0xe0, 0xa3, 0x9d,
	0x50, 0xb2, 0x3a, 0x6e, 0x8a, 0x2e, 0x6d, 0xc3, 0xa6, 0xff, 0x61, 0xb5, 0x81, 0x24, 0x10, 0xb1,
	0x00, 0x6e, 0xb5, 0x64, 0x35, 0x6b, 0xfe, 0x7b, 0x6e, 0xb5, 0x10, 0x90, 0xa0, 0x79, 0xa3, 0xe4,
	0x44, 0x48, 0x07, 0xa6, 0xdd, 0xd3, 0xc8, 0xb8, 0x66, 0x4d, 0xde, 0x93, 0x56, 0x7f, 0x90, 0xee,
	0x1e, 0x1e, 0x3f, 0xdd, 0x01, 0x8a, 0xf0, 0xe8, 0x64, 0xc6, 0x97, 0xbd, 0x1b, 0x51, 0x41, 0xbe,
	0x37, 0x38, 0xc7, 0xc8, 0x5a, 0x3a, 0x29, 0x33, 0x32, 0x9f, 0x54, 0x24, 0x2a, 0x80, 0x8b, 0xd7,
	0x37, 0x34, 0xe4, 0x3d, 0x87, 0x2a, 0xe7, 0xa1, 0xa2, 0x6d, 0x72, 0xe5, 0x7e, 0x18, 0x32, 0x2a,
	0xb3, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x64, 0x38, 0xfb, 0x43, 0xda, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoServiceClient is the client API for TodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoServiceClient interface {
	GetTodos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Todos, error)
	UpdateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*Todo, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) GetTodos(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Todos, error) {
	out := new(Todos)
	err := c.cc.Invoke(ctx, "/TodoService/GetTodos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UpdateTodo(ctx context.Context, in *Todo, opts ...grpc.CallOption) (*Todo, error) {
	out := new(Todo)
	err := c.cc.Invoke(ctx, "/TodoService/UpdateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServiceServer is the server API for TodoService service.
type TodoServiceServer interface {
	GetTodos(context.Context, *Empty) (*Todos, error)
	UpdateTodo(context.Context, *Todo) (*Todo, error)
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_GetTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TodoService/GetTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetTodos(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UpdateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Todo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UpdateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/TodoService/UpdateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UpdateTodo(ctx, req.(*Todo))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTodos",
			Handler:    _TodoService_GetTodos_Handler,
		},
		{
			MethodName: "UpdateTodo",
			Handler:    _TodoService_UpdateTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo.proto",
}
